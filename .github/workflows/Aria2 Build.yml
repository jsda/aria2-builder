name: Aria2 Build
on:
  release:
    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - 'diy.sh'
#  schedule:
#    - cron: '30 0 1 * *'
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PROFILE: [amd64, arm64, armhf, i386, win64]
        include:
        - PROFILE: amd64
          BUILD_SCRIPT: aria2-gnu-linux-build.sh
        - PROFILE: arm64
          BUILD_SCRIPT: aria2-gnu-linux-cross-build-arm64.sh
        - PROFILE: armhf
          BUILD_SCRIPT: aria2-gnu-linux-cross-build-armhf.sh
        - PROFILE: i386
          BUILD_SCRIPT: aria2-gnu-linux-cross-build-i386.sh
        - PROFILE: win64
          BUILD_SCRIPT: aria2-gnu-linux-cross-build-win64.sh

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Build
      env:
        DOCKER_BUILDKIT: 1
        BUILDER_IMAGE: debian:testing
        PROFILE: ${{ matrix.PROFILE }}
        BUILD_SCRIPT: ${{ matrix.BUILD_SCRIPT }}
        ZLIB: https://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz
        GITHUB_REPO: jsda/aria2-builder
      run: |
        getversion(){
        curl -fsSL https://api.github.com/repos/$1/releases | grep -o '"tag_name": ".*"' | head -n 1 | sed 's/"//g;s/v//g' | sed 's/tag_name: //g' | sed 's/release-//g'
        }
        echo "======================="
        ARIA2_VER=$(getversion aria2/aria2)
        C_ARES=https://github.com/c-ares/c-ares/releases/download/$(getversion c-ares/c-ares)/$(echo "$(getversion c-ares/c-ares)" | head -n 1 | sed 's/_/./g' | sed 's/ca/c-a/g').tar.gz
        EXPAT=https://github.com/libexpat/libexpat/releases/download/$(getversion libexpat/libexpat)/expat-$(echo "$(getversion libexpat/libexpat)" | head -n 1 | sed 's/_/./g' | sed 's/R.//g').tar.bz2
        LIBSSH2=https://github.com/libssh2/libssh2/releases/download/$(getversion libssh2/libssh2)/$(getversion libssh2/libssh2).tar.gz
        OPENSSL=https://www.openssl.org/source/$(curl -fsSL https://www.openssl.org/source/ | grep -o '"openssl-[0-9].*.tar.gz"' | head -n 1 | sed 's/"//g')
        SQLITE3=https://sqlite.org/$(curl -fsSL https://sqlite.org/download.html | grep -o '..../sqlite-autoconf-.*.tar.gz' | head -n 1)
        echo "======================="
        echo "Aria2 $ARIA2_VER"
        echo "$PROFILE"
        echo "$BUILD_SCRIPT"
        echo "======================="
        ## DEPENDENCES ##
        echo "C_ARES=$C_ARES"
        echo "EXPAT=$EXPAT"
        echo "LIBSSH2=$LIBSSH2"
        echo "OPENSSL=$OPENSSL"
        echo "SQLITE3=$SQLITE3"
        echo "ZLIB=$ZLIB"
        echo "GITHUB_REPO=$GITHUB_REPO"
        echo "::set-env name=GITHUB_REPO::$GITHUB_REPO"
        echo "======================="
        echo "dockerfiles也要加入相应变量"
        docker build \
          --build-arg BUILDER_IMAGE \
          --build-arg BUILD_SCRIPT \
          --build-arg ARIA2_VER \
          --build-arg ZLIB \
          --build-arg EXPAT \
          --build-arg C_ARES \
          --build-arg OPENSSL \
          --build-arg SQLITE3 \
          --build-arg LIBSSH2 \
          --platform=local \
          -o ./output .
        cd output
        TAG=$ARIA2_VER-$(date "+%Y%m%d")
        echo "::set-env name=TAG::$TAG"
        echo "::set-env name=PROFILE::$PROFILE"
        echo "## ARIA2 HASH SHA512" > README.md
        echo "$(sha512sum aria2c*)" >> README.md
        sed -i "s/aria2c*/aria2-$PROFILE/g" README.md
        zip -9 -r aria2-$ARIA2_VER-$PROFILE.zip aria2c* README.md
        rm -rf aria2c*
        echo "======================="
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        echo "$(cat README.md)"
        echo "======================="

    - name: Upload
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        cd output
        git init
        git config user.name "actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "$TAG"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git" HEAD:$PROFILE
